language: csharp
dotnet: 3.0
mono: none
solution: OCCBPackage.sln

before_script:
    - dotnet restore
script:
    - dotnet build

before_deploy: 
    - git checkout origin/master && git fetch && git remote set-url origin https://${GITHUB_OAUTH_TOKEN}@github.com/OmniChannelChatBot/OCCBPackage.git
    - PR_TITLE=$(git log -1 --pretty='%f')
    - echo $PR_TITLE
    - FEATURE=$([[ $PR_TITLE == 'feature' ]] && echo 1 || echo 0)
    - RELEASE=$([[ $PR_TITLE == 'release' ]] && echo 1 || echo 0)
    - LAST_TAG=$(echo $(git describe --tags $(git rev-list --tags --max-count=1)) | cut -d'v' -f 2)
    - export CURRENT_TAG=$(($(echo $LAST_TAG | cut -d. -f 1)+$RELEASE)).$(($(echo $LAST_TAG | cut -d. -f 2)+$FEATURE)).$(($(echo $LAST_TAG | cut -d. -f 3)+1))
    - PACKAGE_VERSION=${CURRENT_TAG:-$DEFAULT_PACKAGE_VERSION}
    # - git tag v$PACKAGE_VERSION && git push origin v$PACKAGE_VERSION
    - dotnet pack -c $CONFIGURATION -p:PackageVersion=$PACKAGE_VERSION
# deploy:
#     provider: releases
#     name: v$CURRENT_TAG
#     api_key: $GITHUB_OAUTH_TOKEN
#     skip_cleanup: true
#     repo: OmniChannelChatBot/OCCBPackage
#     on:
#         branch: master
# after_deploy:
#     - dotnet nuget push ./src/OCCBPackage/bin/$CONFIGURATION/OCCBPackage.$PACKAGE_VERSION.nupkg -k $NUGET_API_KEY -s $NUGET_SOURCE